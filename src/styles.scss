
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

html {
  @include mat.theme((
    color: (
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: light;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; background:#f6f8ff; }

.status-indicator:not(.main-status) { display: none; }

.mp-inline {
  align-items: center;
}

.mp-inline label {
  margin-bottom: 4px;
}

.mp-inline .radio-group,
.mp-inline .ng-star-inserted {
  display: inline-flex;
  gap: 16px;
}

.mp-body input[type="text"],
.mp-body input[type="number"],
.mp-body select,
.mp-body textarea {
  width: 100%;
  border: 1px solid #e2e8f0; /* slate-200 */
  border-radius: 10px;
  padding: 10px 12px;
  font-size: 0.95rem;
  color: #0f172a;
  background: #fff;
  outline: none;
  transition: border-color .15s, box-shadow .15s;
}

.mp-body textarea {
  min-height: 90px;
  resize: vertical;
}

.mp-body input:focus,
.mp-body select:focus,
.mp-body textarea:focus {
  border-color: #60a5fa; /* blue-400 */
  box-shadow: 0 0 0 3px rgba(96, 165, 250, 0.25);
}

.btn {
  appearance: none;
  border: 1px solid transparent;
  border-radius: 10px;
  padding: 10px 14px;
  font-weight: 600;
  font-size: 0.95rem;
  cursor: pointer;
}

.btn-light {
  background: #f8fafc;
  color: #0f172a;
  border-color: #e2e8f0;
}

.btn-light:hover {
  background: #f1f5f9;
}

.btn-primary {
  background: linear-gradient(135deg, #2563eb 0%, #4f46e5 100%);
  color: #fff;
}

.btn-primary:hover {
  filter: brightness(1.05);
}

.btn:disabled {
  opacity: .6;
  cursor: not-allowed;
}

:root{
--sidenav-text: #cfe3ff;               /* texto normal */
--sidenav-text-active: #ffffff;        /* texto activo/hover */
--sidenav-hover-bg: rgba(255,255,255,.10); /* hover visible sobre fondo azul */
--sidenav-active-bg: rgba(255,255,255,.18);/* activo con más contraste */
--sidenav-radius: 10px;
}

/* Contenedor del menú lateral */
.sidenav{
display: flex;
flex-direction: column;
gap: 6px;
}

/* Enlaces del menú lateral */
.sidenav .sidenav-link {
display: flex;
align-items: center;
gap: .5rem;
padding: .55rem .85rem;
border-radius: var(--sidenav-radius);
color: var(--sidenav-text);
text-decoration: none;
user-select: none;
transition: background .15s ease, color .15s ease, box-shadow .15s ease;
}

.sidenav .sidenav-link:hover,
.sidenav .sidenav-link:focus-visible {
background: var(--sidenav-hover-bg);
color: var(--sidenav-text-active);
outline: none;
}

.sidenav .sidenav-link.active {
background: var(--sidenav-active-bg);
color: var(--sidenav-text-active);
font-weight: 700;
}

.sidenav .sidenav-link i {
width: 18px;
text-align: center;
}
